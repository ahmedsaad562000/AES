module mix_columns(
input [127:0] in ,
output [127:0] out 
);

//Logic of mix columns---> 
 
// 02  03  01  01         This matrix is multplied by the input
// 01  02  03  01         Multplying by 2--> if in[7]=0 then shift left by one and if in[7]=1 then shift left one then xor with 1B(in hexa)       
// 01  01  02  03         Multplying by 1--> No effect to input
// 03  01  01  02         Multplying by 3--> Divided into addition between 1 and 2 and each one is multplied separetly


//////////////////////////////////

assign out [127:120]=mul2(in[127:120])^mul2(in[119:112])^in[119:112]^in[111:104]^in[103:96]; 
assign out [95:88]=mul2(in[95:88])^mul2(in[87:80])^in[87:80]^in[79:72]^in[71:64];
assign out [63:56]=mul2(in[63:56])^mul2(in[55:48])^in[55:48]^in[47:40]^in[39:32];
assign out [31:24]=mul2(in[31:24])^mul2(in[23:16])^in[23:16]^in[15:8]^in[7:0];

//////////////////////////////////

assign out [119:112]=in[127:120]^mul2(in[119:112])^mul2(in[111:104])^(in[111:104])^in[103:96];
assign out [87:80]=in[95:88]^mul2(in[87:80])^mul2(in[79:72])^(in[79:72])^in[71:64];
assign out [55:48]=in[63:56]^mul2(in[55:48])^mul2(in[47:40])^(in[47:40])^in[39:32];
assign out [23:16]=in[31:24]^mul2(in[23:16])^mul2(in[15:8])^(in[15:8])^in[7:0];

//////////////////////////////////

assign out [111:104]=in[127:120]^in[119:112]^mul2(in[111:104])^mul2(in[103:96])^in[103:96];
assign out [79:72]=in[95:88]^in[87:80]^mul2(in[79:72])^mul2(in[71:64])^in[71:64];
assign out [47:40]=in[63:56]^in[55:48]^mul2(in[47:40])^mul2(in[39:32])^in[39:32];
assign out [15:8]=in[31:24]^in[23:16]^mul2(in[15:8])^mul2(in[7:0])^in[7:0];

//////////////////////////////////

assign out [103:96]=mul2(in[127:120])^in[127:120]^in[119:112]^in[111:104]^mul2(in[103:96]);
assign out [71:64]=mul2(in[95:88])^in[95:88]^in[87:80]^in[79:72]^mul2(in[71:64]);
assign out [39:32]=mul2(in[63:56])^in[63:56]^in[55:48]^in[47:40]^mul2(in[39:32]);
assign out [7:0]=mul2(in[31:24])^in[31:24]^in[23:16]^in[15:8]^mul2(in[7:0]);

//////////////////////////////////

function [7:0] mul2 ;
input [7:0]i;
begin
if (i[7]==0)

mul2={i[6:0],1'b0};
                                            // Function of multiplying by 2 
else 
mul2={i[6:0],1'b0}^(8'h1b);

end

endfunction
//////////////////////////////////

endmodule 